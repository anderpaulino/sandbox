'use strict';

describe('Step Autogenerated Form test', function () {

  var $httpBackend, contractSrvc;

  beforeEach(module('autogeneratedForm'));

  beforeEach(function () {

    inject(function ($injector) {
      // Set up the mock http service responses
      $httpBackend = $injector.get('$httpBackend');
      contractSrvc = $injector.get('contractSrvc');
    });
  });

  afterEach(function () {
    $httpBackend.verifyNoOutstandingExpectation();
    $httpBackend.verifyNoOutstandingRequest();
  });

  it('should declare a fetchContract function', function () {

    expect(contractSrvc.fetchContract).toBeTruthy();
  });

  it('should return a contract', function () {

    var contract = {
      processDefinitionId: '1',
      processInstanceId: '2',
      processInstanceInitiatorId: '1',
      businessData1: 'storageId1',
      businessData2: 'storageId2'
    };
    var response;

    $httpBackend.expect('GET', '/bonita/API/bpm/userTask/' + 2 + '/contract')
      .respond(contract);
    contractSrvc.fetchContract(2).then(function (fetchedData) {
      response = fetchedData.data;
    });
    $httpBackend.flush();
    expect(response).toEqual(contract);
  });

});
